openapi: 3.0.3
info:
  title: Broadcast Subtitles Server API
  description: |-
    This is a Subtitle Server API based on the OpenAPI 3.0 specification.  
  
  version: "0.1"
servers:
  - url: https://domain/api/v1
tags:
  - name: subtitles
    description: Access and manage subtitle content
  - name: bookmarks
    description: Access and manage bookmark
paths:
  /subtitles:
    put:
      tags:
        - subtitles
      summary: Update an subtitle content by id
      description: Update an subtitle content by id
      operationId: updateSubtitle
      requestBody:
        required: true
        description: Update an subtitle content by id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubtitlePutRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubtitleResponse'
        '400':
          description: Invalid request value
        '404':
          description: Subtitle not found
        '405':
          description: Validation http method
      security:
        - bearerAuth:
            - write:subtitles
            - read:subtitles
    post:
      tags:
        - subtitles
      summary: Add an subtitle content
      description: Add an subtitle content
      operationId: addSubtitle
      requestBody:
        required: true
        description: Add an subtitle content
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSubtitle'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubtitleResponse'
        '400':
          description: Invalid request value
        '405':
          description: Invalid http method
      security:
        - bearerAuth:
            - write:subtitles
            - read:subtitles
    get:
      tags:
        - subtitles
      summary: Finds subtitle
      description: Finds subtitle
      operationId: findSubtitle
      parameters:
        - name: limit
          in: query
          description: page size for pagination
          required: false
          explode: true
          schema:
            type: string
        - name: start
          in: query
          description: start page
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubtitleResponse'
        '400':
          description: Invalid request query
        '404':
          description: Subtitle not found
        '405':
          description: Invalid http method
      security:
        - bearerAuth:
            - read:subtitles
  /bookmarks:
    put:
      tags:
        - bookmarks
      summary: Update an bookmark content by id
      description: Update an bookmark by id
      operationId: updateBookmark
      requestBody:
        required: true
        description: Update an bookmark by id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkPutRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarkResponse'
        '400':
          description: Invalid request value
        '404':
          description: Subtitle not found
        '405':
          description: Validation http method
      security:
        - bearerAuth:
            - write:subtitles
            - read:subtitles
    post:
      tags:
        - bookmarks
      summary: Add an bookmark
      description: Add an bookmark
      operationId: addBookmark
      requestBody:
        required: true
        description: Add an bookmark
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicBookmark'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookmarkResponse'
        '400':
          description: Invalid request value
        '405':
          description: Invalid http method
      security:
        - bearerAuth:
            - write:subtitles
            - read:subtitles
    get:
      tags:
        - bookmarks
      summary: Finds subtitle in hebrew by id
      description: Finds subtitle in hebrew by id
      operationId: findSubtitleInHebrewById
      parameters:
        - name: limit
          in: query
          description: page size for pagination
          required: false
          explode: true
          schema:
            type: string
        - name: start
          in: query
          description: start page
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BookmarkResponse'
        '400':
          description: Invalid request query
        '404':
          description: Subtitle not found
        '405':
          description: Invalid http method
      security:
        - bearerAuth:
            - read:subtitles
components:
  schemas:
    BasicSubtitle:
      type: object
      required:
        - author
        - title
        - content
        - slides
      properties:
        author:
          type: string
          description: book author
          example: "קלטות רבש"
        title:
          type: string
          description: book title
          example: "001_heb_o_rb_bs-tes-04_1"
        content:
          type: string
          description: book content
          example: "%author קלטות רבש %book 001_heb_o_rb_bs-tes-04_1"
        slides:
          type: string
          example: "[{page: 0
                    letter: 0
                    subletter: 1
                    revert: 1
                    content: <b>חלק רביעי ~
                    }]"
    SubtitlePutRequest:
      allOf:     
        - $ref: '#/components/schemas/BasicSubtitle'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 10
    SubtitleResponse:
      allOf:     
        - $ref: '#/components/schemas/SubtitlePutRequest'
        - type: object
          required:
            - created_at
            - updated_at
          properties:
            created_at:
              type: string
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
            updated_at:
              type: string
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
    BasicBookmark:
      type: object
      required:
        - author
        - book
        - book_name
        - page
        - letter
      properties:
        author:
          type: string
          description: book author
          example: "כתובות מייל"
        book:
          type: string
          description: book path
          example: "/books/1201"
        book_name:
          type: string
          description: book name
          example: "לכנסים רישום הנהלה והפצה"
        page:
          type: integer
          format: int64
          example: 232
        letter:
          type: string
          description: letter
          example: "0-38"
    BookmarkPutRequest:
      allOf:     
        - $ref: '#/components/schemas/BasicBookmark'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 10
    BookmarkResponse:
      allOf:    
        - $ref: '#/components/schemas/BookmarkPutRequest'
        - type: object
          required:
            - created_at
            - updated_at
          properties:
            created_at:
              type: string
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
            updated_at:
              type: string
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
  securitySchemes:
    bearerAuth:
      bearerFormat: auth-scheme
      description: 'Bearer HTTP authentication through keycloak. Allowed headers -- Authorization: Bearer <api_key>'
      scheme: bearer
      type: http
