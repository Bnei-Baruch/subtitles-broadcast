openapi: 3.0.3
info:
  title: Broadcast Subtitles Server API
  description: |-
    This is a Subtitle Server API based on the OpenAPI 3.0 specification.  
  
  version: "0.1"
servers:
  - url: https://domain/api/v1
tags:
  - name: author
    description: Access and manage author information
  - name: book
    description: Access and manage book information
  - name: bookmark
    description: Access and manage bookmark
  - name: content
    description: Access and manage book content
  - name: selected-content
    description: Access and manage the relationship between user and the book content. This means marking book content the user opened
  - name: activated-content
    description: Access and manage the relationship between user and the book content. This means marking book content the user opened previously
paths:
  /selected-content:
    post:
      tags:
        - selected-content
      summary: Add a relationship between a content id and an user
      description: marked content the user opened currently and also the one previously
      operationId: addSelectedContent
      requestBody:
        required: true
        description: book content unique id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicContentRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request value
        '404':
          description: Book content not found
        '405':
          description: Validation http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - write:books
            - read:books
    put:
      tags:
        - selected-content
      summary: Update a content id for the user
      description: Update a content id the user opened currently
      operationId: updateSelectedContent
      requestBody:
        required: true
        description: book content unique id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicContentRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request value
        '404':
          description: Book content not found
        '405':
          description: Validation http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - write:books
            - read:books
  /activated-content:
    delete:
      tags:
        - activated-content
      summary: Delete the relationship between a content id and an user
      description: Delete the mark the content user opened previously and the mark the content user opened currently
      operationId: deleteActivatedContent
      parameters:
        - name: id
          in: query
          description: book content unique id
          required: true
          explode: true
          schema:
            type: string
            format: contentID_page_letter_subletter
            example: "231_3_4_2"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request query
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - write:books
            - read:books
  /content:
    delete:
      tags:
        - content
      summary: Delete the relationship between a content id and an user
      description: Delete the mark the content user opened previously and the mark the content user opened currently
      operationId: deleteContent
      parameters:
        - name: id
          in: query
          description: book content unique id
          required: true
          explode: true
          schema:
            type: string
            format: contentID_page_letter_subletter
            example: "231_3_4_2"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request query
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - write:books
            - read:books
  /book-list:
    get:
      tags:
        - book
      description: Finds book all contents an user opened previously and currently
      operationId: getUserBookContents
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookListResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request query
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - read:books
  /author:
    get:
      tags:
        - author
      description: Finds all authors
      operationId: GetAuthors
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthorResponse'
        '401':
          description: Invalid request jwt token
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - read:books
  /book-title:
    get:
      tags:
        - author
      description: Finds all book titles
      operationId: GetBookTitles
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookTitleResponse'
        '401':
          description: Invalid request jwt token
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - read:books
  /archive:
    get:
      tags:
        - archive
      summary: Get archive information
      description: all archive information or some by filter
      operationId: GetArchives
      parameters:
        - name: page
          in: query
          description: page number
          required: false
          explode: true
          schema:
            type: string
        - name: limit
          in: query
          description: page size
          required: false
          explode: true
          schema:
            type: string
        - name: type
          in: query
          description: title to search for the filter
          required: false
          explode: true
          schema:
            type: string
        - name: book_title
          in: query
          description: author to search for the filter
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArchiveResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request query
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - read:books
components:
  schemas:
    BasicContentRequest:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          format: contentID_page_letter_subletter
          description: book content unique id
          example: "231_3_4_2"
    BasicResponse:
      type: object
      required:
        - success
        - error
        - description
      properties:
        success:
          type: boolean
          description: the boolean value if request has been successful or not 
          example: true
        error:
          type: string
          description: the error message when request has been failed
          example: ""
        description:
          type: string
          description: the description of the request result
          example: Proper messages for the situations
    ContentResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              description: data object when request has been successful
              example: {}
    BookListResponse:
      allOf:     
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: array
              items:
                type: object
                properties:
                  book_title:
                    type: string
                    description: "book title"
                    example: "כרך י\"א - מאמרים ליום הכיפורים"
                  last_activated:
                    type: string
                    description: "book content unique id"
                    example: "7_215_0_1"
                  contents:
                    type: array
                    items:
                      type: string
                      description: "book content"
                      example: "זידונים, הם שאר העמים, ושיניים, הם השרים הממונים על שאר העמים עכו\"ם. והם מתברכים מצידם של ישראל."
    AuthorResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                authors:
                  type: array
                  items:
                    type: string
                    description: author list
                    example: "אאתוספות"
    BookTitleResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                titles:
                  type: array
                  items:
                    type: string
                    description: book title list
                    example: "001_heb_o_rb_bs-tes-04_1"
    ArchiveResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                pagination:
                  type: object
                  properties:
                    limit:
                      type: integer
                      description: page size
                      example: 6
                    page:
                      type: integer
                      example: 1
                    total_rows:
                      type: integer
                      example: 226922
                    total_pages:
                      type: integer
                      example: 37821
                archives:
                  type: array
                  items:
                    properties:
                      id: 
                        type: string
                        description: book content unique id
                        example: "36258_0_0_1"
                      text: 
                        type: string
                        description: book content
                        example: "<b>חלק רביעי</b> כאן מדובר מ- <b>עשר הספירות של עקודים <br/>כולל ו&#39; פרקים</b> אות <b>א.</b> כאן הוא אומר <b>אין לנו כח <br/>לעסוק קודם עולם האצילות.<b/>"
                      author: 
                        type: string
                        example: "קלטות רבש"
                      book_name: 
                        type: string
                        example: ""
                      title: 
                        type: string
                        description: book title
                        example: "001_heb_o_rb_bs-tes-04_1"
  securitySchemes:
    bearerAuth:
      bearerFormat: auth-scheme
      description: 'Bearer HTTP authentication through keycloak. Allowed headers -- Authorization: Bearer <api_key>'
      scheme: bearer
      type: http
