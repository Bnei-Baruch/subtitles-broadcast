openapi: 3.0.3
info:
  title: Broadcast Subtitles Server API
  description: |-
    This is a Subtitle Server API based on the OpenAPI 3.0 specification.  
  
  version: "0.1"
servers:
  - url: https://domain/api/v1
tags:
  - name: subtitle
    description: Access and manage subtitle information
  - name: bookmark
    description: Access and manage bookmark
paths:
  /bookmark/{subtitleId}:
    post:
      tags:
        - subtitle
      summary: Add a subtitle id for the user bookmark path
      description: Add a subtitle id for the user bookmark path
      operationId: addBookmark
      parameters:
        - in: path
          name: subtitleId
          schema:
            type: integer
          required: true
          description: Numeric ID of the subtitle to insert
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarkPostResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request value
        '404':
          description: Book content not found
        '405':
          description: Validation http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - write:bookmarks
            - read:bookmarks
    get:
      tags:
        - book
      description: Finds bookmark path by subtitle id
      operationId: GetBookmark
      parameters:
        - in: path
          name: subtitleId
          schema:
            type: integer
          required: true
          description: Numeric ID of the subtitle to get bookmark path
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/bookmarkGetResponse'
        '401':
          description: Invalid request jwt token
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - read:books
  /subtitle:
    get:
      tags:
        - subtitle
      description: Finds all subtitle
      operationId: getSubtitles
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubtitleResponse'
        '401':
          description: Invalid request jwt token
        '400':
          description: Invalid request query
        '404':
          description: content not found
        '405':
          description: Invalid http method
        '500':
          description: Internal error
      security:
        - bearerAuth:
            - read:subtitles
components:
  schemas:
    BasicResponse:
      type: object
      required:
        - success
        - error
        - description
      properties:
        success:
          type: boolean
          description: the boolean value if request has been successful or not 
          example: true
        error:
          type: string
          description: the error message when request has been failed
          example: ""
        description:
          type: string
          description: the description of the request result
          example: Proper messages for the situations
    SubtitleResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                  description: subtitle id
                  example: 1
                source_uid:
                  type: string
                  description: archive source uid
                  example: "tswzgnWk"
                file_uid:
                  type: string
                  description: archive file uid
                  example: "OzSCqHYF"
                file_source_type:
                  type: string
                  description: file source type(archive or upload)
                  example: "archive"
                subtitle:
                  type: string
                  description: subtitle
                  example: "Foreword to The Book of Zohar"
                order_number:
                  type: integer
                  description: subtitle order number
                  example: 0
                langugae:
                  type: string 
                  description: language code
                  example: "en"
                created_at:
                  type: string
                  description: created time
                  example: "2023-09-04T09:26:23.086238Z"
                update_at:
                  type: string
                  description: updated time
                  example: "2023-09-04T09:26:23.086238Z"
    bookmarkPostResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: object
              properties:
                id:
                  type: integer
                  description: bookmark id
                  example: 1
                subtitle_id:
                  type: integer
                  description: subtitle id
                  example: 1
    bookmarkGetResponse:
      allOf:
        - $ref: '#/components/schemas/BasicResponse'
        - type: object
          required:
            - data
          properties:
            data:
              type: string
              description: bookmark path when request has been successful
              example: "Yehuda Leib Ha-Levi Ashlag(Baal HaSulam) / ARTICLE / Foreword to The Book of Zohar"
  securitySchemes:
    bearerAuth:
      bearerFormat: auth-scheme
      description: 'Bearer HTTP authentication through keycloak. Allowed headers -- Authorization: Bearer <api_key>'
      scheme: bearer
      type: http