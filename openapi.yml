openapi: 3.0.3
info:
  title: Broadcast Subtitles Server API
  description: |-
    This is a Subtitle Server API based on the OpenAPI 3.0 specification.  
  
  version: "0.1"
servers:
  - url: https://domain/api/v1
tags:
  - name: subtitles
    description: Access and manage subtitle content in specific language
paths:
  /languages/hebrew/subtitles:
    put:
      tags:
        - subtitles
      summary: Update an subtitle content in hebrew by subtitle_id
      description: Update an subtitle content in hebrew by subtitle_id
      operationId: updateSubtitleInHebrew
      requestBody:
        required: true
        description: Update an subtitle content in hebrew by subtitle_id
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubtitlePutRequest'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubtitleResponse'
        '400':
          description: Invalid request value
        '404':
          description: Subtitle not found
        '405':
          description: Validation http method
      security:
        - bearerAuth:
            - write:subtitles
            - read:subtitles
    post:
      tags:
        - subtitles
      summary: Add an subtitle content in hebrew
      description: Add an subtitle content in hebrew
      operationId: addSubtitleInHebrew
      requestBody:
        required: true
        description: an subtitle content in hebrew
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BasicSubtitle'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubtitleResponse'
        '400':
          description: Invalid request value
        '405':
          description: Invalid http method
      security:
        - bearerAuth:
            - write:subtitles
            - read:subtitles
    get:
      tags:
        - subtitles
      summary: Finds subtitle in hebrew by id
      description: Finds subtitle in hebrew by id
      operationId: findSubtitleInHebrewById
      parameters:
        - name: id
          in: query
          description: Id values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SubtitleResponse'
        '400':
          description: Invalid subtitle id value
        '404':
          description: Subtitle not found
      security:
        - bearerAuth:
            - read:subtitles
components:
  schemas:
    BasicSubtitle:
      type: object
      required:
        - author
        - title
        - content
        - slides
      properties:
        author:
          type: string
          description: book author
        title:
          type: string
          description: book title
        content:
          type: string
          description: book content
        slides:
          type: string
    SubtitlePutRequest:
      allOf:     # Combines the BasicErrorModel and the inline model
        - $ref: '#/components/schemas/BasicSubtitle'
        - type: object
          required:
            - id
          properties:
            id:
              type: integer
              format: int64
              example: 10
    SubtitleResponse:
      allOf:     # Combines the BasicErrorModel and the inline model
        - $ref: '#/components/schemas/SubtitlePutRequest'
        - type: object
          required:
            - created_at
            - updated_at
          properties:
            created_at:
              type: string
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
            updated_at:
              type: string
              format: date-time
              example: "2021-06-20T01:02:03+00:00"
  securitySchemes:
    bearerAuth:
      bearerFormat: auth-scheme
      description: 'Bearer HTTP authentication through keycloak. Allowed headers -- Authorization: Bearer <api_key>'
      scheme: bearer
      type: http
